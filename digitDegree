Let's define digit degree of some positive integer as the number of times we need to replace this number with the sum of its digits until we get to a one digit number.

Given an integer, find its digit degree.

Example

For n = 5, the output should be
solution(n) = 0;
For n = 100, the output should be
solution(n) = 1.
1 + 0 + 0 = 1.
For n = 91, the output should be
solution(n) = 2.
9 + 1 = 10 -> 1 + 0 = 1.



My solution: Simple while loop that will break n into individual digits, sum them and assign as new n until n gets to a single digit. Uses a var degree as counter 

def solution(n):
    
    degree = 0
    while n > 9:
        n = sum([int(a) for a in str(n)])
        degree += 1
    return degree
    
    
