You've heard somewhere that a word is more powerful than an action. You decided to put this statement at a test by assigning a power value to each action and each word. To begin somewhere, you defined a power of a word as the sum of powers of its characters, where power of a character is equal to its 1-based index in the plaintext alphabet.

Given a word, calculate its power.

Example

For word = "hello", the output should be
solution(word) = 52.

Letters 'h', 'e', 'l' and 'o' have powers 8, 5, 12 and 15, respectively. Thus, the total power of the word is 8 + 5 + 12 + 12 + 15 = 52.

Another example with code provided and a segment requiring completion.


Provided snippet:
def solution(word):
    num = ...
    return sum([num[ch] for ch in word])

Logic:
Use of list comprehension expected. Simple case of using ord to determine the unicode value of the letters in the word, and subtract 96 to obtain standard value.  

def solution(word):
    num = {i: ord(i)-96 for i in word}
    return sum([num[ch] for ch in word])
